service: serverless-static-website-template
app: serverless-static-website-template
org: georgelim

provider:
  name: aws
  deploymentBucket:
    maxPreviousDeploymentArtifacts: 1

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
              Action: s3:GetObject
              Resource: !Sub ${S3Bucket.Arn}/*

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Sub CloudFront OAI for ${S3Bucket}

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          CustomErrorResponses:
            - ErrorCachingMinTTL: 60
              ErrorCode: 404
              ResponseCode: 404
              ResponsePagePath: /404.html
            - ErrorCachingMinTTL: 60
              ErrorCode: 403
              ResponseCode: 403
              ResponsePagePath: /403.html
          DefaultCacheBehavior:
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            TargetOriginId: !Sub ${S3Bucket}-origin
            ViewerProtocolPolicy: redirect-to-https
          DefaultRootObject: index.html
          Enabled: true
          HttpVersion: http2
          Origins:
            - DomainName: !GetAtt S3Bucket.DomainName
              Id: !Sub ${S3Bucket}-origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
          PriceClass: PriceClass_100

  Outputs:
    CloudFrontDistribution:
      Value: !GetAtt CloudFrontDistribution.DomainName
    S3Bucket:
      Value: !Ref S3Bucket

plugins:
  - serverless-export-outputs
  - serverless-s3-sync

custom:
  exportOutputs:
    include:
      - CloudFrontDistribution
    handler: scripts/postDeploy.js
    output:
      file: /dev/null
  s3Sync:
    - bucketNameKey: S3Bucket
      localDir: www
